{"version":3,"file":"static/js/190.89b137e9.chunk.js","mappings":"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","sources":["components/movieCard/index.tsx","pages/favorite/components/moviesCont/NeedAuthorization.tsx","pages/favorite/components/moviesCont/Search.tsx","pages/favorite/components/moviesCont/index.tsx","pages/favorite/index.tsx","utils/hooks/useDebounce.ts"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { TMovieCard } from './type';\r\nimport LabelRating from 'components/labelRating';\r\nimport { ENUMS } from 'constants/enums';\r\nimport PosterPlug from 'components/posterPlug';\r\nimport Like from 'components/like';\r\nimport { Link } from 'react-router-dom';\r\nimport { useAppSelector } from 'utils/hooks/useRedux';\r\n\r\nconst MovieCard: React.FC<TMovieCard> = ({ movieInfo }) => {\r\n  const { id, name, posterUrl, rating, year, countries } = movieInfo;\r\n  const user = useAppSelector((state) => state.user?.user?.login);\r\n  const isLiked = useAppSelector((state) =>\r\n    user ? state.favorite.movies?.[user]?.find((i) => i.id === id) : null\r\n  );\r\n  const [isHovering, setIsHovering] = useState(false);\r\n\r\n  const hoverHandlerOver = () => setIsHovering(true);\r\n  const hoverHandlerOut = () => setIsHovering(false);\r\n\r\n  const poster = posterUrl\r\n    ? {\r\n        backgroundImage: `url(${posterUrl})`,\r\n        backgroundSize: 'cover',\r\n      }\r\n    : {};\r\n\r\n  return (\r\n    <Link\r\n      to={`/${id}`}\r\n      onMouseOver={hoverHandlerOver}\r\n      onMouseOut={hoverHandlerOut}\r\n    >\r\n      <div\r\n        style={poster}\r\n        className={`w-40 h-60 relative rounded bg-gradient-to-b\r\n           from-amber-500 to-lime-500 dark:from-amber-600 dark:to-lime-600`}\r\n      >\r\n        {(isLiked || isHovering) && (\r\n          <div className=\"absolute flex justify-end w-8 top-2 left-3\">\r\n            <Like movieInfo={movieInfo} />\r\n          </div>\r\n        )}\r\n        {!posterUrl && <PosterPlug />}\r\n        <div className=\"absolute right-1 top-2/3\">\r\n          <LabelRating rating={rating} />\r\n        </div>\r\n      </div>\r\n      <h3 className=\"font-bold text-sm\">{name}</h3>\r\n      <p>\r\n        {countries?.map((c) => `${c.name}, `)}\r\n        <span className=\"text-md\">{!!year ? year : ENUMS.noYear}</span>\r\n      </p>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NeedAuthorization: React.FC = (props) => {\r\n  return (\r\n    <p className=\"text-xl w-full mx-auto mt-10 text-center\">\r\n    Для просмотра избранных фильмов нужно{' '}\r\n    <Link\r\n      to={'/login'}\r\n      className={`underline cursor-pointer font-medium\r\n                  text-amber-600 dark:text-amber-700\r\n                  hover:text-amber-500 hover:dark:text-amber-400`}\r\n    >\r\n      войти\r\n    </Link>{' '}\r\n    или{' '}\r\n    <Link\r\n      to={'/signup'}\r\n      className={`underline cursor-pointer font-medium\r\n                  text-amber-600 dark:text-amber-700\r\n                  hover:text-amber-500 hover:dark:text-amber-400`}\r\n    >\r\n      авторизоваться\r\n    </Link>\r\n  </p>\r\n  );\r\n};\r\n\r\nexport default NeedAuthorization;","import React, { useState } from 'react';\r\nimport { TSearch } from '../../type';\r\nimport useDebounce from 'utils/hooks/useDebounce';\r\n\r\nconst Search: React.FC<TSearch> = ({ setSearchInput }) => {\r\n  const [val, setVal] = useState('');\r\n  const debouncedSearchInput = useDebounce(val);\r\n\r\n  React.useEffect(() => {\r\n    setSearchInput(debouncedSearchInput);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [debouncedSearchInput]);\r\n  return (\r\n    <div className=\"h-14 w-1/4 flex flex-col justify-between\">\r\n      <h6 className=\"text-sm font-bold truncate text-amber-600 dark:text-amber-500\">\r\n        Поиск по названию\r\n      </h6>\r\n      <input\r\n        placeholder=\"введите текст...\"\r\n        type=\"text\"\r\n        value={val}\r\n        onChange={(e) => setVal(e.target.value)}\r\n        className={`h-10 w-full px-2 rounded outline-none\r\n            text-slate-950\r\n            focus-visible:border-2 border-amber-500 dark:border-amber-600\r\n             bg-yellow-200`}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import MovieCard from 'components/movieCard';\r\nimport React, { useState } from 'react';\r\nimport { useAppSelector } from 'utils/hooks/useRedux';\r\nimport NeedAuthorization from './NeedAuthorization';\r\nimport Search from './Search';\r\n\r\nconst MoviesCont: React.FC = () => {\r\n  const user = useAppSelector((state) => state.user.user?.login);\r\n  const movies = useAppSelector((state) =>\r\n    user ? state.favorite.movies[user] : null\r\n  );\r\n\r\n  const [searchInput, setSearchInput] = useState('');\r\n\r\n  const filteredMovies = searchInput\r\n    ? movies?.filter((m) => m.name.toLowerCase().includes(searchInput))\r\n    : movies;\r\n\r\n  return (\r\n    <>\r\n      {!!filteredMovies ? (\r\n        <>\r\n          <Search setSearchInput={setSearchInput} />\r\n          <div className=\"grid grid-cols-1 grid-rows-[1fr_112px]\">\r\n            <div\r\n              style={{ height: `calc(100vh - 350px)` }}\r\n              className=\"grid gap-5 mt-5 mb-2 grid-cols-grid-cards overflow-y-auto\"\r\n            >\r\n              {!!filteredMovies.length ? (\r\n                filteredMovies.map((m) => (\r\n                  <MovieCard\r\n                    key={m.id}\r\n                    movieInfo={m}\r\n                  />\r\n                ))\r\n              ) : searchInput ? (\r\n                <p>Нет фильмов с таким запросом</p>\r\n              ) : (\r\n                <p>У вас нет избранных фильмов</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <NeedAuthorization />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MoviesCont;\r\n","import React from 'react';\r\nimport MoviesCont from './components/moviesCont';\r\n\r\nconst PageFavorite: React.FC = () => {\r\n  return (\r\n    <section className=\"flex flex-col w-5/6 mx-auto row-start-2\">\r\n      <MoviesCont />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default PageFavorite;\r\n","import { useEffect, useState } from 'react';\r\n\r\nfunction useDebounce<T>(value: T, delay?: number): T {\r\n  const [debouncedValue, setDebouncedValue] = useState<T>(value);\r\n  \r\n  useEffect(() => {\r\n    const timer = setTimeout(() => setDebouncedValue(value), delay || 500);\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [value, delay]);\r\n\r\n  return debouncedValue;\r\n}\r\n\r\nexport default useDebounce;\r\n"],"names":["_ref","movieInfo","id","name","posterUrl","rating","year","countries","user","useAppSelector","state","_state$user","_state$user$user","login","isLiked","_state$favorite$movie","_state$favorite$movie2","favorite","movies","find","i","isHovering","setIsHovering","useState","poster","backgroundImage","backgroundSize","_jsxs","Link","to","onMouseOver","hoverHandlerOver","onMouseOut","hoverHandlerOut","children","style","className","_jsx","Like","PosterPlug","LabelRating","map","c","ENUMS","noYear","props","setSearchInput","val","setVal","debouncedSearchInput","useDebounce","React","placeholder","type","value","onChange","e","target","MoviesCont","searchInput","filteredMovies","filter","m","toLowerCase","includes","_Fragment","Search","height","length","MovieCard","NeedAuthorization","PageFavorite","delay","debouncedValue","setDebouncedValue","useEffect","timer","setTimeout","clearTimeout"],"sourceRoot":""}