{"version":3,"file":"static/js/420.a662393d.chunk.js","mappings":"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","sources":["api/movie/index.ts","components/movieCard/index.tsx","constants/queries/queries.ts","components/pagination/components/onePage/index.tsx","components/pagination/components/changePage/index.tsx","components/pagination/index.tsx","components/pageSizeChanger/index.tsx","pages/main/components/moviesCont/index.tsx","pages/main/components/filters/Search.tsx","pages/main/components/filters/SelectGenge.tsx","pages/main/components/filters/index.tsx","pages/main/components/searchMoviesCont/index.tsx","pages/main/index.tsx","utils/hooks/useDebounce.ts"],"sourcesContent":["import { api } from '..';\r\nimport {\r\n  TMoviesResponseData,\r\n  IMoviesTransformResponse,\r\n  TPossibleValuesForFiltersResponse,\r\n} from './type';\r\n\r\nexport const movieApi = api.injectEndpoints({\r\n  endpoints: (build) => ({\r\n    getMovies: build.query({\r\n      query: (params) => ({\r\n        url: !!params ? `/v1.4/movie?${params}` : '/v1.4/movie',\r\n        method: 'GET',\r\n      }),\r\n      transformResponse: (\r\n        response: TMoviesResponseData\r\n      ): IMoviesTransformResponse => {\r\n        const moviesList = [];\r\n        for (const m of response.docs) {\r\n          moviesList.push({\r\n            id: m.id,\r\n            name: m.name || m.alternativeName || 'название отсутствует',\r\n            posterUrl: m.poster?.url || null,\r\n            rating: m.rating.imdb,\r\n            year: m.year,\r\n            countries: m.countries,\r\n          });\r\n        }\r\n        return {\r\n          moviesList,\r\n          limit: response.limit,\r\n          page: response.page,\r\n          pages: response.pages,\r\n          total: response.total,\r\n        };\r\n      },\r\n    }),\r\n    getMoviesWithSearch: build.query({\r\n      query: (params) => ({\r\n        url: !!params ? `/v1.4/movie/search?${params}` : '/v1.4/movie/search',\r\n        method: 'GET',\r\n      }),\r\n      transformResponse: (\r\n        response: TMoviesResponseData\r\n      ): IMoviesTransformResponse => {\r\n        const moviesList = [];\r\n        for (const m of response.docs) {\r\n          moviesList.push({\r\n            id: m.id,\r\n            name: m.name || m.alternativeName || 'название отсутствует',\r\n            posterUrl: m.poster?.url || null,\r\n            rating: m.rating.imdb,\r\n            year: m.year,\r\n            countries: m.countries,\r\n          });\r\n        }\r\n        return {\r\n          moviesList,\r\n          limit: response.limit,\r\n          page: response.page,\r\n          pages: response.pages,\r\n          total: response.total,\r\n        };\r\n      },\r\n    }),\r\n    getPossibleValuesForFilters: build.query<\r\n      TPossibleValuesForFiltersResponse[],\r\n      string\r\n    >({\r\n      query: (params) => ({\r\n        url: !!params\r\n          ? `/v1/movie/possible-values-by-field?${params}`\r\n          : '/v1/movie/possible-values-by-field',\r\n        method: 'GET',\r\n      }),\r\n    }),\r\n    getMovieById: build.query<any, string>({\r\n      query: (id) => ({\r\n        url: `/v1.4/movie/${id}`,\r\n        method: 'GET',\r\n      }),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetMoviesQuery,\r\n  useGetMoviesWithSearchQuery,\r\n  useGetPossibleValuesForFiltersQuery,\r\n  useGetMovieByIdQuery,\r\n} = movieApi;\r\n","import React, { useState } from 'react';\r\nimport { TMovieCard } from './type';\r\nimport LabelRating from 'components/labelRating';\r\nimport { ENUMS } from 'constants/enums';\r\nimport PosterPlug from 'components/posterPlug';\r\nimport Like from 'components/like';\r\nimport { Link } from 'react-router-dom';\r\nimport { useAppSelector } from 'utils/hooks/useRedux';\r\n\r\nconst MovieCard: React.FC<TMovieCard> = ({ movieInfo }) => {\r\n  const { id, name, posterUrl, rating, year, countries } = movieInfo;\r\n  const user = useAppSelector((state) => state.user?.user?.login);\r\n  const isLiked = useAppSelector((state) =>\r\n    user ? state.favorite.movies?.[user]?.find((i) => i.id === id) : null\r\n  );\r\n  const [isHovering, setIsHovering] = useState(false);\r\n\r\n  const hoverHandlerOver = () => setIsHovering(true);\r\n  const hoverHandlerOut = () => setIsHovering(false);\r\n\r\n  const poster = posterUrl\r\n    ? {\r\n        backgroundImage: `url(${posterUrl})`,\r\n        backgroundSize: 'cover',\r\n      }\r\n    : {};\r\n\r\n  return (\r\n    <Link\r\n      to={`/${id}`}\r\n      onMouseOver={hoverHandlerOver}\r\n      onMouseOut={hoverHandlerOut}\r\n    >\r\n      <div\r\n        style={poster}\r\n        className={`w-40 h-60 relative rounded bg-gradient-to-b\r\n           from-amber-500 to-lime-500 dark:from-amber-600 dark:to-lime-600`}\r\n      >\r\n        {(isLiked || isHovering) && (\r\n          <div className=\"absolute flex justify-end w-8 top-2 left-3\">\r\n            <Like movieInfo={movieInfo} />\r\n          </div>\r\n        )}\r\n        {!posterUrl && <PosterPlug />}\r\n        <div className=\"absolute right-1 top-2/3\">\r\n          <LabelRating rating={rating} />\r\n        </div>\r\n      </div>\r\n      <h3 className=\"font-bold text-sm\">{name}</h3>\r\n      <p>\r\n        {countries?.map((c) => `${c.name}, `)}\r\n        <span className=\"text-md\">{!!year ? year : ENUMS.noYear}</span>\r\n      </p>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n","export const QUERY_SELECT_FIELDS = [\r\n    'alternativeName',\r\n    'id',\r\n    'name',\r\n    'poster',\r\n    'rating',\r\n    'year',\r\n    'countries'\r\n  ];\r\n  ","import { useAppDispatch } from 'utils/hooks/useRedux';\r\nimport { TPaginationComponents } from '../type';\r\nimport { changeMainPageNumber } from 'store/pageNumbersSlice';\r\n\r\nconst OnePage: React.FC<TPaginationComponents> = ({\r\n  page,\r\n  pages,\r\n  changeMode,\r\n}) => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const handlePageChange = (direction: 'prev' | 'next'): void => {\r\n    let pageTo: number | undefined;\r\n\r\n    if (direction === 'prev') {\r\n      if (page > 1) pageTo = page - 1;\r\n    }\r\n    if (direction.toString() === 'next') {\r\n      if (page < pages) {\r\n        pageTo = page + 1;\r\n      }\r\n    }\r\n\r\n    if (!pageTo) return;\r\n    dispatch(changeMainPageNumber(pageTo));  \r\n  };\r\n\r\n  return (\r\n    <div className=\"flex gap-3 text-2xl\">\r\n      <p\r\n        onClick={() => {\r\n          handlePageChange('prev');\r\n        }}\r\n        className={`w-10 h-10 font-bold \r\n                    text-center rounded-full\r\n                    bg-yellow-200\r\n                    ${page === 1 ? 'cursor-not-allowed' : 'cursor-pointer'}\r\n                    `}\r\n      >\r\n        &#11064;\r\n      </p>\r\n      <div\r\n        onClick={changeMode}\r\n        className={`min-w-10 max-w-min h-10 px-2 flex\r\n        cursor-pointer rounded-full items-center justify-center\r\n        bg-yellow-300`}\r\n      >\r\n        <p className=\"font-bold\">{page}</p>\r\n      </div>\r\n      <p\r\n        onClick={() => {\r\n          handlePageChange('next');\r\n        }}\r\n        className={`w-10 h-10 font-bold \r\n                    text-center rounded-full \r\n                    ${page === pages ? 'cursor-not-allowed' : 'cursor-pointer'}\r\n                    bg-yellow-200`}\r\n      >\r\n        &#10513;\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OnePage;\r\n","import React, { useState } from 'react';\r\nimport { TPaginationComponents } from '../type';\r\nimport { useAppDispatch } from 'utils/hooks/useRedux';\r\nimport { changeMainPageNumber } from 'store/pageNumbersSlice';\r\n\r\nconst ChangePage: React.FC<TPaginationComponents> = ({\r\n  page,\r\n  pages,\r\n  changeMode,\r\n}) => {\r\n  const [currentPageNumber, setCurrentPageNumber] = useState<string | number>(\r\n    page\r\n  );\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const handleInput = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (!!e.target.value) {\r\n      const val = +e.target.value;\r\n      val > 0 && val <= pages\r\n        ? setCurrentPageNumber(val)\r\n        : setCurrentPageNumber(pages);\r\n      if (val <= 0) setCurrentPageNumber(1);\r\n    } else setCurrentPageNumber('');\r\n  };\r\n\r\n  const handlePageChange = () => {\r\n    if (\r\n      !currentPageNumber ||\r\n      typeof currentPageNumber !== 'number' ||\r\n      currentPageNumber === page\r\n    )\r\n      return;\r\n    dispatch(changeMainPageNumber(currentPageNumber));\r\n    changeMode();\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col justify-center mb-3 max-w-min\">\r\n      <p\r\n        className={`h-10 rounded-full max-w-min\r\n        flex items-center text-xl\r\n        bg-lime-300 dark:bg-lime-700`}\r\n      >\r\n        <input\r\n          type=\"number\"\r\n          inputMode=\"numeric\"\r\n          min=\"1\"\r\n          max={pages}\r\n          value={currentPageNumber}\r\n          onChange={(e) => handleInput(e)}\r\n          className=\"bg-transparent outline-none text-right\"\r\n        />\r\n        <span\r\n          onClick={() => handlePageChange()}\r\n          className={`${\r\n            !currentPageNumber ? 'cursor-not-allowed' : 'cursor-pointer'\r\n          } pr-2 font-bold text-lime-900 dark:text-lime-200`}\r\n        >\r\n          &#10003;\r\n        </span>\r\n      </p>\r\n      <p className=\"text-xs self-center text-amber-950 dark:text-amber-600\">максимум {pages}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChangePage;\r\n","import React, { useState } from 'react';\r\nimport { TPagination } from './type';\r\nimport OnePage from './components/onePage';\r\nimport ChangePage from './components/changePage';\r\n\r\nconst Pagination: React.FC<TPagination> = (props) => {\r\n  const { limit, page, pages, total } = props;\r\n  const [isChangePageMode, setIsChangePageMode] = useState(false);\r\n  return (\r\n    <div\r\n      className=\"flex flex-col items-center max-w-min h-28 dark:text-slate-950\"\r\n    >\r\n      {isChangePageMode ? (\r\n        <ChangePage\r\n          page={page}\r\n          pages={pages}\r\n          changeMode={() => setIsChangePageMode((prev) => !prev)}\r\n        />\r\n      ) : (\r\n        <div className=\"h-16 mb-1\"></div>\r\n      )}\r\n      <OnePage\r\n        page={page}\r\n        pages={pages}\r\n        changeMode={() => setIsChangePageMode((prev) => !prev)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React from 'react';\r\nimport { useAppDispatch, useAppSelector } from 'utils/hooks/useRedux';\r\nimport { PAGE_SIZES } from 'constants/enums';\r\nimport { changeMainPageSize } from 'store/pageSizesSlice';\r\n\r\n\r\n\r\nconst PageSizeChanger: React.FC = (props) => {\r\n  const pageSize = useAppSelector((state) =>\r\n    state.pageSizes.mainPageSize.toString()\r\n  );\r\n  const dispatch = useAppDispatch();\r\n\r\n  const handlePageChange = (direction: 'prev' | 'next'): void => {\r\n    const currentPageIndex = PAGE_SIZES.findIndex((page) => page === +pageSize);\r\n    let currentPage;\r\n    if (direction === 'prev') {\r\n      if (currentPageIndex > 0) currentPage = PAGE_SIZES[currentPageIndex - 1];\r\n    }\r\n    if (direction === 'next') {\r\n      if (currentPageIndex < PAGE_SIZES[PAGE_SIZES.length - 1])\r\n        currentPage = PAGE_SIZES[currentPageIndex + 1];\r\n    }\r\n    if (!currentPage) return;\r\n    dispatch(changeMainPageSize(currentPage)); \r\n\r\n  };\r\n\r\n  const pStyle = 'w-10 h-10 leading-10 text-center rounded-full bg-lime-300';\r\n  return (\r\n    <div className=\"flex items-end gap-3 mb-1 text-2xl dark:text-slate-950\">\r\n      <p\r\n        onClick={() => {\r\n          handlePageChange('prev');\r\n        }}\r\n        className={`${pStyle}\r\n                    ${\r\n                      +pageSize === PAGE_SIZES[0]\r\n                        ? 'cursor-not-allowed'\r\n                        : 'cursor-pointer'\r\n                    }\r\n                    `}\r\n      >\r\n        &#12298;\r\n      </p>\r\n      <div\r\n        className={`min-w-10 max-w-min h-10 px-2 flex\r\n        cursor-pointer rounded-full items-center justify-center\r\n        bg-lime-400`}\r\n      >\r\n        <p className=\"font-bold\">{pageSize}</p>\r\n      </div>\r\n      <p\r\n        onClick={() => {\r\n          handlePageChange('next');\r\n        }}\r\n        className={`${pStyle}\r\n                    ${\r\n                      +pageSize === PAGE_SIZES[PAGE_SIZES.length - 1]\r\n                        ? 'cursor-not-allowed'\r\n                        : 'cursor-pointer'\r\n                    }`}\r\n      >\r\n        &#12299;\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageSizeChanger;\r\n","import { useGetMoviesQuery } from 'api/movie';\r\nimport { QUERY_SELECT_FIELDS } from 'constants/queries/queries';\r\nimport MovieCard from 'components/movieCard';\r\nimport Pagination from 'components/pagination';\r\nimport { useAppSelector } from 'utils/hooks/useRedux';\r\nimport PageSizeChanger from 'components/pageSizeChanger';\r\nimport { TMoviesCont } from '../type';\r\nimport Loader from 'components/loader';\r\n\r\nconst MoviesCont: React.FC<TMoviesCont> = ({ genreFilter }) => {\r\n  const pageNumber = useAppSelector((state) =>\r\n    state.pageNumbers.mainPageNumber.toString()\r\n  );\r\n  const pageSize = useAppSelector((state) =>\r\n    state.pageSizes.mainPageSize.toString()\r\n  );\r\n\r\n  const params = new URLSearchParams(\r\n    QUERY_SELECT_FIELDS.map((param) => ['selectFields', param])\r\n  );\r\n\r\n  params.append('page', pageNumber);\r\n  params.append('limit', pageSize);\r\n  if (genreFilter) params.append('genres.name', genreFilter);\r\n\r\n  const {\r\n    data: mainData,\r\n    isFetching: mainDataIsFetching,\r\n    isError,\r\n  } = useGetMoviesQuery(params.toString());\r\n\r\n  return (\r\n    <>\r\n      {!isError&&!mainDataIsFetching && !!mainData?.moviesList?.length && (\r\n        <div className=\"grid grid-cols-1 grid-rows-[1fr_112px]\">\r\n          <div\r\n            style={{ height: `calc(100vh - 350px)` }}\r\n            className=\"grid gap-5 mt-5 mb-2 grid-cols-grid-cards overflow-y-auto\"\r\n          >\r\n            {mainData.moviesList.map((m) => (\r\n              <MovieCard\r\n                key={m.id}\r\n                movieInfo={m}\r\n              />\r\n            ))}\r\n          </div>\r\n          <div className=\"flex justify-between\">\r\n            <Pagination\r\n              total={mainData.total}\r\n              limit={mainData.limit}\r\n              page={mainData.page}\r\n              pages={mainData.pages}\r\n            />\r\n            <PageSizeChanger />\r\n          </div>\r\n        </div>\r\n      )}\r\n      {mainDataIsFetching && (\r\n        <div\r\n          style={{ height: `calc(100vh - 350px)` }}\r\n          className=\"flex items-center justify-center\"\r\n        >\r\n          <Loader />\r\n        </div>\r\n      )}\r\n       {isError && (\r\n        <div\r\n          style={{ height: `calc(100vh - 350px)` }}\r\n          className=\"flex items-center justify-center\"\r\n        >\r\n          <p className='text-2xl text-amber-600'>Ошибка получения данных от сервера</p>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MoviesCont;\r\n","import React, { useState } from 'react';\r\nimport { TSearch } from '../type';\r\nimport useDebounce from 'utils/hooks/useDebounce';\r\n\r\nconst Search: React.FC<TSearch> = ({ setSearchInput }) => {\r\n  const [val, setVal] = useState('');\r\n  const debouncedSearchInput = useDebounce(val);\r\n\r\n  React.useEffect(() => {\r\n    setSearchInput(debouncedSearchInput);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [debouncedSearchInput]);\r\n  return (\r\n    <div className=\"h-14 w-1/4 flex flex-col justify-between\">\r\n      <h6 className=\"text-sm font-bold truncate text-amber-600 dark:text-amber-500\">\r\n        Поиск по названию\r\n      </h6>\r\n      <input\r\n        placeholder=\"введите текст...\"\r\n        type=\"text\"\r\n        value={val}\r\n        onChange={(e) => setVal(e.target.value)}\r\n        className={`h-10 w-full px-2 rounded outline-none\r\n            text-slate-950\r\n            focus-visible:border-2 border-amber-500 dark:border-amber-600\r\n             bg-yellow-200`}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import { useGetPossibleValuesForFiltersQuery } from 'api/movie';\r\nimport { TSelectGenge } from '../type';\r\n\r\nconst SelectGenge: React.FC<TSelectGenge> = ({\r\n  isSearchInput,\r\n  setGenreFilter,\r\n}) => {\r\n  const params = new URLSearchParams();\r\n  params.append('field', 'genres.name');\r\n\r\n  const { data, isLoading, isError } = useGetPossibleValuesForFiltersQuery(\r\n    params.toString()\r\n  );\r\n\r\n  const changeHandler = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setGenreFilter(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-14 w-1/4 flex flex-col justify-between\">\r\n      <h6 className=\"text-sm font-bold truncate text-amber-600 dark:text-amber-500\">\r\n        Фильтр по жанру\r\n      </h6>\r\n      <select\r\n        disabled={isSearchInput}\r\n        defaultValue=\"\"\r\n        onChange={(e) => changeHandler(e)}\r\n        className={`h-10 w-full px-2 rounded outline-none\r\n          text-slate-950\r\n            focus-visible:border-2 border-amber-500 dark:border-amber-600\r\n          bg-yellow-200\r\n        `}\r\n      >\r\n        <option\r\n          value=\"\"\r\n          className=\"appearance-none bg-yellow-200\"\r\n        >\r\n          Все\r\n        </option>\r\n        {isLoading && (\r\n          <option\r\n            disabled\r\n            value=\"\"\r\n            className=\"appearance-none bg-yellow-200\"\r\n          >\r\n            загружаю варианты...\r\n          </option>\r\n        )}\r\n          {isError && (\r\n          <option\r\n            disabled\r\n            value=\"\"\r\n            className=\"appearance-none bg-yellow-200\"\r\n          >\r\n            невозможно подгрузить, воспользуйтесь поиском\r\n          </option>\r\n        )}\r\n        {!isError&&!isLoading && !!data?.length &&\r\n          data.map((genre) => (\r\n            <option\r\n              key={genre.slug}\r\n              value={genre.name}\r\n            >\r\n              {genre.name}\r\n            </option>\r\n          ))}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectGenge;\r\n","import { TFilters } from '../type';\r\nimport Search from './Search';\r\nimport SelectGenge from './SelectGenge';\r\n\r\nconst Filters: React.FC<TFilters> = ({ setSearchInput, isSearchInput, setGenreFilter }) => {\r\n  return (\r\n    <div className=\"flex gap-x-4\">\r\n      <Search setSearchInput={setSearchInput} />\r\n      <SelectGenge isSearchInput={isSearchInput} setGenreFilter={setGenreFilter}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n","import { useGetMoviesWithSearchQuery } from 'api/movie';\r\nimport React from 'react';\r\nimport { useAppSelector } from 'utils/hooks/useRedux';\r\nimport { TSearchMoviesCont } from '../type';\r\nimport MovieCard from 'components/movieCard';\r\nimport Pagination from 'components/pagination';\r\nimport PageSizeChanger from 'components/pageSizeChanger';\r\nimport Loader from 'components/loader';\r\n\r\nconst SearchMoviesCont: React.FC<TSearchMoviesCont> = ({ searchInput }) => {\r\n  const pageSize = useAppSelector((state) =>\r\n    state.pageSizes.mainPageSize.toString()\r\n  );\r\n  const params = new URLSearchParams();\r\n\r\n  params.append('limit', pageSize);\r\n  params.append('query', searchInput);\r\n\r\n  const {\r\n    data: searchData,\r\n    isFetching: searchDataIsFetching,\r\n    isError,\r\n  } = useGetMoviesWithSearchQuery(params.toString(), {\r\n    refetchOnMountOrArgChange: true,\r\n    skip: !searchInput,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {!isError &&\r\n        !searchDataIsFetching &&\r\n        !!searchData?.moviesList?.length && (\r\n          <div className=\"grid grid-cols-1 grid-rows-[1fr_112px]\">\r\n            <div\r\n              style={{ height: `calc(100vh - 350px)` }}\r\n              className=\"grid gap-5 mt-5 mb-2 grid-cols-grid-cards overflow-y-auto\"\r\n            >\r\n              {searchData.moviesList.map((m) => (\r\n                <MovieCard\r\n                  key={m.id}\r\n                  movieInfo={m}\r\n                />\r\n              ))}\r\n            </div>\r\n            <div className=\"flex justify-between\">\r\n              <Pagination\r\n                total={searchData.total}\r\n                limit={searchData.limit}\r\n                page={searchData.page}\r\n                pages={searchData.pages}\r\n              />\r\n              <PageSizeChanger />\r\n            </div>\r\n          </div>\r\n        )}\r\n      {searchDataIsFetching && (\r\n        <div\r\n          style={{ height: `calc(100vh - 350px)` }}\r\n          className=\"flex items-center justify-center\"\r\n        >\r\n          <Loader />\r\n        </div>\r\n      )}\r\n      {isError && (\r\n        <div\r\n          style={{ height: `calc(100vh - 350px)` }}\r\n          className=\"flex items-center justify-center\"\r\n        >\r\n          <p className=\"text-2xl text-amber-600\">\r\n            Ошибка получения данных от сервера\r\n          </p>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchMoviesCont;\r\n","import React, { useState } from 'react';\r\nimport MoviesCont from './components/moviesCont';\r\nimport Filters from './components/filters';\r\nimport SearchMoviesCont from './components/searchMoviesCont';\r\n\r\nconst PageMain: React.FC = () => {\r\n  const [searchInput, setSearchInput] = useState('');\r\n  const [genreFilter, setGenreFilter] = useState('');\r\n\r\n  return (\r\n    <section className=\"flex flex-col w-5/6 mx-auto row-start-2\">\r\n      <Filters\r\n        isSearchInput={!!searchInput}\r\n        setSearchInput={setSearchInput}\r\n        setGenreFilter={setGenreFilter}\r\n      />\r\n      {!searchInput ? (\r\n        <MoviesCont genreFilter={genreFilter}/>\r\n      ) : (\r\n        <SearchMoviesCont searchInput={searchInput} />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default PageMain;\r\n","import { useEffect, useState } from 'react';\r\n\r\nfunction useDebounce<T>(value: T, delay?: number): T {\r\n  const [debouncedValue, setDebouncedValue] = useState<T>(value);\r\n  \r\n  useEffect(() => {\r\n    const timer = setTimeout(() => setDebouncedValue(value), delay || 500);\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [value, delay]);\r\n\r\n  return debouncedValue;\r\n}\r\n\r\nexport default useDebounce;\r\n"],"names":["movieApi","api","injectEndpoints","endpoints","build","getMovies","query","params","url","method","transformResponse","response","moviesList","m","docs","_m$poster","push","id","name","alternativeName","posterUrl","poster","rating","imdb","year","countries","limit","page","pages","total","getMoviesWithSearch","_m$poster2","getPossibleValuesForFilters","getMovieById","useGetMoviesQuery","useGetMoviesWithSearchQuery","useGetPossibleValuesForFiltersQuery","useGetMovieByIdQuery","_ref","movieInfo","user","useAppSelector","state","_state$user","_state$user$user","login","isLiked","_state$favorite$movie","_state$favorite$movie2","favorite","movies","find","i","isHovering","setIsHovering","useState","backgroundImage","backgroundSize","_jsxs","Link","to","onMouseOver","hoverHandlerOver","onMouseOut","hoverHandlerOut","children","style","className","_jsx","Like","PosterPlug","LabelRating","map","c","ENUMS","noYear","QUERY_SELECT_FIELDS","changeMode","dispatch","useAppDispatch","handlePageChange","direction","pageTo","toString","changeMainPageNumber","onClick","currentPageNumber","setCurrentPageNumber","type","inputMode","min","max","value","onChange","e","target","val","handleInput","props","isChangePageMode","setIsChangePageMode","ChangePage","prev","OnePage","pageSize","pageSizes","mainPageSize","currentPageIndex","PAGE_SIZES","findIndex","currentPage","length","changeMainPageSize","pStyle","_mainData$moviesList","genreFilter","pageNumber","pageNumbers","mainPageNumber","URLSearchParams","param","append","data","mainData","isFetching","mainDataIsFetching","isError","_Fragment","height","MovieCard","Pagination","PageSizeChanger","Loader","setSearchInput","setVal","debouncedSearchInput","useDebounce","React","placeholder","isSearchInput","setGenreFilter","isLoading","disabled","defaultValue","changeHandler","genre","slug","Search","SelectGenge","_searchData$moviesLis","searchInput","searchData","searchDataIsFetching","refetchOnMountOrArgChange","skip","PageMain","Filters","SearchMoviesCont","MoviesCont","delay","debouncedValue","setDebouncedValue","useEffect","timer","setTimeout","clearTimeout"],"sourceRoot":""}